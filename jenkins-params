pipeline{
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 10, unit: 'SECONDS') 
        disableConcurrentBuilds()
    }
    parameters{
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch to build')
        booleanParam(name: 'RUN_TESTS', defaultValue: true, description: 'Run test cases')
        choice(name: 'ENVIRONMENT', choices: ['dev', 'staging', 'prod'], description: 'Deployment environment')
        password(name: 'SECRET_PASSWORD', defaultValue: 'password', description: 'Secret password')
 
    }
    stages{
        stage('checkout'){
            steps{
                echo "branch name: ${BRANCH_NAME}"
            }
        }
        stage('build'){
            steps{
                sh 'echo "checkout"'
            }
        }
        stage('test') {
            steps{
                echo "test: ${RUN_TESTS}"
            }
        }
        stage('Approval') {
            steps {
                script {
                    def userInput = input(
                        id: 'UserInput', message: 'Approve deployment?', parameters: [
                            choice(name: 'DEPLOY_ENV', choices: ['dev', 'staging', 'prod'], description: 'Select environment'),
                            booleanParam(name: 'PROCEED', defaultValue: true, description: 'Proceed with deployment?')
                        ]
                    )
                    echo "Selected environment: ${userInput.DEPLOY_ENV}"
                    echo "Proceed with deployment: ${userInput.PROCEED}"
                }
            }
        }
    }
    post{
        always{
            deleteDir()
        }
        success{
            echo "this will execute when pipleline success"
        }
    }
}